{"version":3,"sources":["../../src/controller/rentrider.js"],"names":["config","db","api","post","req","res","newRider","RentRider","userid","body","licenseno","rating","imageid","save","err","send","json","message","get","find","Riders","findById","params","id","Rider","put","delete","remove","_id","rentrider","messgae","newReview","Review2","title","text","review","reviews","push","share"],"mappings":"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","file":"rentrider.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport RentRider from '../model/rentrider';\nimport Review2 from '../model/review2'\nexport default({ config, db }) => {\n  let api = Router();\n  //CRUD Create Read Update Delete\n  // '/v1/rentrider/add\n  api.post('/add', (req, res) => {\n    let newRider = new RentRider();\n    newRider.userid= req.body.userid;\n    newRider.licenseno= req.body.licenseno;\n    newRider.rating= req.body.rating;\n    newRider.imageid=req.body.imageid;\n    newRider.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Rider Added Sucessfully' });\n    });\n  });\n  //v1/rentrider\n  api.get('/',(req,res)=>{\n    RentRider.find({},(err,Riders)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json(Riders);\n    });\n  });\n  // v1/rentrider/:id --Read 1\n  api.get('/:id',(req,res)=>{\n    RentRider.findById(req.params.id,(err,Rider)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json(Rider);\n    });\n  });\n\n  //update a rider v1/rentrider/:id\n  api.put('/:id',(req,res)=>{\n    RentRider.findById(req.params.id,(err,Rider)=>{\n      if(err){\n        res.send(err);\n      }\n      Rider.userid= req.body.userid;\n      Rider.licenseno= req.body.licenseno;\n      Rider.rating= req.body.rating;\n      Rider.imageid=req.body.imageid;\n\n      Rider.save(err=>{\n        if(err){\n          res.send(err);\n        }\n        res.json({message:\"Rider info updated\"});\n      });\n    });\n  });\n\n  //delete a rider v1/rentrider/:id\n  api.delete('/:id',(req,res)=>{\n    RentRider.remove({\n      _id:req.params.id\n    },(err,rentrider)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json({messgae:\"Rider Removed Sucessfully\"});\n    });\n\n  });\n\n  //v1/rentrider/reviews/add/:id\n  //route is to add ReviewSchema\n  api.post('/reviews/add/:id',(req,res)=>{\n    RentRider.findById(req.params.id,(err,Rider)=>{\n      if(err){\n        res.send(err);\n\n      }\n      let newReview= new Review2();\n      newReview.title= req.body.title;\n      newReview.text= req.body.text;\n      newReview.rating= req.body.rating;\n      newReview.rentrider= Rider._id;\n      newReview.save((err,review)=>{\n        if(err){\n          res.send(err);\n        }\n        Rider.reviews.push(newReview);\n        Rider.save(err=>{\n          if(err){\n            res.send(err);\n          }\n          res.json({message:\"Review Saved\"});\n        })\n      });\n    });\n  });\n\n//get reviews of a a userid\n//v1/rentrider/reviews/:id\n  api.get('/reviews/:id',(req,res)=>{\n    Review2.find({rentrider:req.params.id},(err,reviews)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n//delete a Review\napi.delete('/reviews/:id',(req,res)=>{\n  Review2.remove({_id:req.params.id},(err,share)=>{\n    if(err){\n      res.send(err);\n    }\n    res.json({messgae:\"Review Deleted Susessfully\"});\n  });\n});\n\n\n\n  return api;\n}\n"]}