{"version":3,"sources":["../../src/controller/rentride.js"],"names":["verify","require","config","db","api","post","req","res","newRide","RentRide","vehicleno","body","licenseno","image","vehiclemodel","location","coordinates","save","err","send","json","message","get","find","Rides","findById","params","id","Ride","put","delete","remove","_id","rentrider","messgae","newReview","Review3","title","text","rating","rentride","review","reviews","push","share"],"mappings":"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","file":"rentride.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport RentRide from '../model/rentride';\nimport Review3 from '../model/review3';\nconst verify = require('../middleware/authMiddleware')\nexport default({ config, db }) => {\n  let api = Router();\n  //CRUD Create Read Update Delete\n  // '/v1/rentride/add\n  api.post('/add',(req, res) => {\n    let newRide = new RentRide();\n    newRide.vehicleno= req.body.vehicleno;\n    newRide.licenseno= req.body.licenseno;\n    newRide.image= req.body.image;\n    newRide.vehiclemodel=req.body.vehiclemodel;\n    newRide.location.coordinates= req.body.location.coordinates;\n    newRide.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Ride Added Sucessfully' });\n    });\n  });\n// to get list of all rides\n// v1/rentride\n  api.get('/',verify,(req,res)=>{\n    RentRide.find({},(err,Rides)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json(Rides);\n    });\n  });\n\n  // to get details about a particular ride\n  //   v1/rentride/:id\n  api.get('/:id',(req,res)=>{\n    RentRide.findById(req.params.id,(err,Ride)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json(Ride);\n    });\n  });\n\n\n  api.put('/:id',(req,res)=>{\n    RentRide.findById(req.params.id,(err,Ride)=>{\n      if(err){\n        res.send(err);\n      }\n      Ride.vehicleno= req.body.vehicleno;\n      Ride.licenseno= req.body.licenseno;\n      Ride.location.coordinates= req.body.location.coordinates;\n      Ride.image=req.body.image;\n      Ride.vehiclemodel= req.body.vehiclemodel;\n\n      Ride.save(err=>{\n        if(err){\n          res.send(err);\n        }\n        res.json({message:\"Rider info updated\"});\n      });\n    });\n  });\n\n  //to delete rentride/:id\n  api.delete('/:id',(req,res)=>{\n    RentRide.remove({\n      _id:req.params.id\n    },(err,rentrider)=>{\n      if(err){\n        res.send(err);\n      }\n      res.json({messgae:\"Ride Removed Sucessfully\"});\n    });\n\n  });\n\n  //v1/rentride/reviews/add/:id\n  //route is to add ReviewSchema\n  api.post('/reviews/add/:id',(req,res)=>{\n    RentRide.findById(req.params.id,(err,Ride)=>{\n      if(err){\n        res.send(err);\n\n      }\n      let newReview= new Review3();\n      newReview.title= req.body.title;\n      newReview.text= req.body.text;\n      newReview.rating= req.body.rating;\n      newReview.rentride= Ride._id;\n      newReview.save((err,review)=>{\n        if(err){\n          res.send(err);\n        }\n        Ride.reviews.push(newReview);\n        Ride.save(err=>{\n          if(err){\n            res.send(err);\n          }\n          res.json({message:\"Review Saved\"});\n        })\n      });\n    });\n  });\n\n\n  //get reviews of a a userid\n  //v1/rentride/reviews/:id\n    api.get('/reviews/:id',(req,res)=>{\n      Review3.find({rentride:req.params.id},(err,reviews)=>{\n        if(err){\n          res.send(err);\n        }\n        res.json(reviews);\n      });\n    });\n\n    api.delete('/reviews/:id',(req,res)=>{\n      Review3.remove({_id:req.params.id},(err,share)=>{\n        if(err){\n          res.send(err);\n        }\n        res.json({messgae:\"Review Deleted Susessfully\"});\n      });\n    });\n\n\n\n\n\n\n\n\n  return api;\n\n}\n"]}